heat_template_version: 2014-10-16
description: Template to deploy a Percona 5.7 Server

parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
    constraints:
      - custom_constraint: nova.keypair
  instance_type:
    type: string
    label: Instance Type
    default: m1.small
    constraints:
      - custom_constraint: nova.flavor
  network:
    type: string
    label: Network where instance will reside
    default: rj-private
    constraints:
      - custom_constraint: neutron.network
  security_group_list:
    type: comma_delimited_list
    label: security group list for server port

resources:
  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 1
      timeout: 500

  wait_handle:
    type: OS::Heat::WaitConditionHandle

  boot_config:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        users:
        - default
        - name: ansible 
          gecos: ansible
          primary-group: wheel
          passwd: $6$9Ixdwpdl$01BgZDx4QHaMUrfKPxhnhl4xRccc.Sbv8.443MTIBgAnFuNi0pLky8be4TXfRRqJF/m57XyUpai8hOLEna80k1
          lock_passwd: false
          sudo: ALL=(ALL) NOPASSWD:ALL
        yum_repos:
          nic-percona:
            baseurl: http://10.162.1.144/pub/repo/percona/7/x86_64/
            enabled: true
            gpgcheck: false
            name: NIC mirror of Percona 
          nic-epel:
            baseurl: http://10.162.1.144/pub/repo/epel/7/x86_64/
            enabled: true 
            gpgcheck: false
            name: NIC mirror of epel
          influxdb:
            baseurl: https://repos.influxdata.com/centos/\$releasever/\$basearch/stable  
            enabled: true
            gpgcheck: true
            gpgkey: https://repos.influxdata.com/influxdb.key
            name: NIC mirror of Percona
        packages:
        - Percona-Server-server-57
        - httpd
        - mod_wsgi
        - telegraf
        - git
        - gcc
        - python-devel
        - python-pip
        - nc
        - psmisc

  boot_script:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: 
        str_replace:
          params:
            wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/bash -ex
            echo $(whoami) >> /tmp/cloud-init-user
            setenforce 0
            echo "10.162.0.19   region1.cloud.egov.com" >> /etc/hosts
            # mysql config
            mysqld --user=root --initialize-insecure=TRUE
            chown -R mysql:mysql /var/lib/mysql
            systemctl enable mysqld.service
            systemctl start mysqld.service
            mysql -u root -h localhost <<EOF
             create user thermos identified by 'thermos';
             create database thermos;
             grant all on thermos.* to thermos;
             create user telegraf identified by 'telegraf';
             grant select on performance_schema.* to telegraf;
             grant select on thermos.* to telegraf;
            EOF

            # apache setup
            mkdir -p /var/www/thermos
            chown -R apache:apache /var/www/thermos
            chmod -R 755 /var/www
            mkdir -p /etc/httpd/sites-available
            mkdir -p /etc/httpd/sites-enabled
            echo "IncludeOptional sites-enabled/*.conf" >> /etc/httpd/conf/httpd.conf
            cat <<EOF>/etc/httpd/sites-available/thermos.conf
            <VirtualHost *:80>
              WSGIScriptAlias / /var/www/thermos/thermos.wsgi
              DocumentRoot /var/www/thermos
              ErrorLog /var/log/httpd/thermos_error.log
              CustomLog /var/log/httpd/thermos_requests.log combined
            </VirtualHost>
            EOF
            ln -s /etc/httpd/sites-available/thermos.conf /etc/httpd/sites-enabled/thermos.conf
            systemctl enable httpd.service
            systemctl start httpd.service

            # app setup
            git clone https://github.com/rjjanuary/thermos.git /var/www/thermos
            #cd /var/www/thermos
            #git checkout thermos_v2
            #cd -
            pip install -r /var/www/thermos/requirements.txt
            export THERMOS_ENV=mysql
            python /var/www/thermos/manage.py db init
            python /var/www/thermos/manage.py db migrate
            python /var/www/thermos/manage.py db upgrade
            python /var/www/thermos/manage.py insert_data 
            apachectl restart
            # telegraf setup
            cp /var/www/thermos/external_config/telegraf.conf /etc/telegraf/telegraf.conf
            systemctl enable telegraf.service
            #systemctl start telegraf.service
            # call back to openstack to end wait event
            wc_notify --data-binary '{"status": "SUCCESS"}'

  server_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: boot_config}
      - config: {get_resource: boot_script}

  host_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network }
      security_groups: 
        { get_param : security_group_list }

  host_server:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: CentOS-7-x86_64-GenericCloud-1606
      flavor: { get_param: instance_type }
      networks:
        - port: { get_resource: host_port }
      user_data_format: SOFTWARE_CONFIG
      user_data: {get_resource: server_init} 

outputs:
  inst_name:
    description: Name of the instance
    value: { get_attr: [host_server, name] }
  instance_ip:
    description: IP address of the instance
    value: { get_attr: [host_server, first_address] }
  port:
    description: The network assigned to this host.
    value: { get_resource: host_port }
